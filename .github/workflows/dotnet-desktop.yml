name: .NET Core Build and Test

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  id-token: write
  contents: read
  checks: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      Solution_Name: IntegrationTesting.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: RestAPITest\RestAPITest.csproj               # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: IntegrationTesting\RestAPI    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: IntegrationTesting\RestAPI.csproj                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:    
    - uses: actions/checkout@v4      
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore
      run: dotnet restore ${{ env.Solution_Name }}
       
    - name: Build
      run: dotnet build ${{ env.Solution_Name }} --configuration Debug --no-restore
          
    - name: Test
      run: dotnet test ${{ env.Solution_Name }} --logger "trx;LogFileName=TestResults.trx" --no-restore --no-build  

    - name: Test Reporter
      uses: dorny/test-reporter@v1.9.1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Xunit Tests            # Name of the check run which will be created
        path: RestAPITest/TestResults/TestResults.trx    # Path to test results
        reporter: dotnet-trx 
          
    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
      if: always()
